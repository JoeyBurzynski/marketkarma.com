# Settings in the [build] context are global and are applied to
# all contexts unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # If not set, defaults to the root directory.
  # base = "project/"

  # Directory that contains the deploy-ready HTML files and
  # assets generated by the build. This is relative to the base
  # directory if one has been set, or the root directory if
  # a base has not been set. This sample publishes the directory
  # located at the absolute path "root/project/build-output"

  publish = "public/"

  # Default build command.
  command = "echo 'default context'"

[build.processing]
  skip_processing = false
[build.processing.css]
  bundle = true
  minify = true
[build.processing.js]
  bundle = true
  minify = true
[build.processing.html]
  pretty_urls = true
[build.processing.images]
  compress = true


[[headers]]
  for = "/*"
  [headers.values]
    Strict-Transport-Security = '''
    max-age=63072000;
    includeSubDomains;
    preload'''


[[redirects]]
  from = "/schedule"
  to = "https://calendarhero.to/SEO"
  status = 200
  force = false
  headers = {X-From = "Netlify"}

[[redirects]]
  from = "/sample-redirect"
  to = "https://calendarhero.to/SEO"
  status = 301
  force = false
  headers = {X-From = "Netlify"}



[[plugins]]
package = "netlify-plugin-subfont"

  [plugins.inputs]
  # An array of glob patterns for pages on your site
  # Recursive traversal will start from these
  entryPoints = [
   "**/*.html", "*.html"
  ]

  # Follow your links across all pages to optimize the fonts across the entire site
  recursive = true

  # Subfont lets you set CSS font-display value of the optimized subsets
  # See https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display
  fontDisplay = "swap"

  # Inline generated CSS @font-face blocks into each page
  # When set to `false` an external CSS file will be created
  inlineCss = false

  # Inline generated font subsets into their respective @font-face blocks
  # When set to `false` external font files will be created
  inlineFonts = false

  # Include fallbacks so the original font will be loaded when dynamic content gets injected at runtime
  # When set to `false` external font files will be created
  fallbacks = false



[[plugins]]
package = "netlify-plugin-image-optim"


[[plugins]]
  package = "netlify-plugin-inline-source"

  # All inputs are optional, so you can omit this section.
  # Defaults are shown below.
  # You can also refer to the `inline-source` documentation: https://github.com/popeindustries/inline-source#usage.
  [plugins.inputs]
    # Attribute used to parse sources. All tags will be parsed if set to `false`.
    attribute = "inline"

    # Enable/disable compression of inlined content.
    compress = true

    # Maintain leading whitespace when `compress` is `false`.
    pretty = false

    # Disable inlining based on tag, type, and/or format.
    ignore = []

    # Convert `<img inline src="*.svg" />` to `<img>` and not `<svg>`.
    svgAsImage = false


# Config for the Netlify Build Plugin: netlify-plugin-minify-html
[[plugins]]
  package = "netlify-plugin-minify-html"

  # Specify which deploy contexts we'll minify HTML in.
  # Supports any Deploy Contexts available in Netlify.
  # https://docs.netlify.com/site-deploys/overview/#deploy-contexts
  [plugins.inputs]
    contexts = [
      'production',
      'branch-deploy',
      'deploy-preview'
    ]

  # Optionally, override the default options for the minification
  # https://github.com/kangax/html-minifier#options-quick-reference
  [plugins.inputs.minifierOptions]
    removeComments = false
    collapseInlineTagWhitespace = false


[[plugins]]
  # Installs the Lighthouse Build Plugin for all deploy contexts
  package = "@netlify/plugin-lighthouse"

  # optional, fails build when a category is below a threshold
  # [plugins.inputs.thresholds]
  #   performance = 0.9
  #   accessibility = 0.9
  #   best-practices = 0.9
  #   seo = 0.9
  #   pwa = 0.9

  # optional, deploy the lighthouse report to a path under your site
  [plugins.inputs]
    output_path = "public/reports/lighthouse.html"





# Production context: all deploys from the Production branch
# set in your site’s Branches settings in the UI will inherit
# these settings. You can define environment variables
# here but we recommend using the Netlify UI for sensitive
# values to keep them out of your source repository.
[context.production]
  publish = "public/"
  command = "echo 'production'"
  environment = { NODE_VERSION = "16.5.0" }

# Deploy Preview context: all deploys generated from
# a pull/merge request will inherit these settings.
[context.deploy-preview]
  publish = "public/"

# Skip all post processing in deploy previews,
# ignoring any other settings
[context.deploy-preview.processing]
  skip_processing = true

[context.branch-name.processing]
  skip_processing = false
[context.branch-name.processing.images]
  compress = false

# Here is an example of how to define context-specific
# environment variables. To avoid committing sensitive
# values to public source repositories, set variables
# with the Netlify UI, CLI, or API instead.
# [context.deploy-preview.environment]
#   NOT_PRIVATE_ITEM = "not so secret"

# Branch Deploy context: all deploys that are not from
# a pull/merge request or from the Production branch
# will inherit these settings.
# [context.branch-deploy]
#  command = "echo branch"
# [context.branch-deploy.environment]
#  NODE_ENV = "development"

# Dev context: environment variables set here
# are available for local development environments
# run using Netlify Dev. These values can be
# overwritten on branches that have a more specific
# branch context configured.
# [context.dev.environment]
#   NODE_ENV = "development"

# Specific branch context: all deploys from
# this specific branch will inherit these settings.
# [context.staging] # “staging” is a branch name
#   command = "echo 'staging'"
#   base = "staging"

# For contexts of branches with special characters,
# enclose the branch name with quotes.
# [context."feat/branch"]
#   command = "echo 'special branch'"
#   base = "branch"

# Redirects and headers are GLOBAL for all builds – they do not
# get scoped to contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files,
# which are PER-DEPLOY.

# A basic redirect rule
# [[redirects]]
#   from = "/*"
#   to = "/blog/:splat"

# A redirect rule with many of the supported properties
# [[redirects]]
#   from = "/old-path"
#   to = "/new-path"

  # The default HTTP status code is 301, but you can
  # define a different one.
  # status = 302

  # By default, redirects won’t be applied if there’s a file
  # with the same path as the one defined in the `from` property.
  # Setting `force` to `true` will make the redirect rule
  # take precedence over any existing files.
  # force = true

  # Redirect from /old-path?id=123 to /new-path.
  # Each combination of query params needs to be
  # defined in a separate [[redirects]] block.
  # More information at https://docs.netlify.com/routing/redirects/redirect-options/#query-parameters
  # query = {id = ":id"}

  # Redirect based on conditions including browser language,
  # geolocation, identity role, and/or cookie presence.
  # conditions = {Language = ["en"], Country = ["US"]}

  # Sign each request with a value defined in an environment variable
  #signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
  # [redirects.headers]
  #  X-From = "Netlify"
  #  X-Api-Key = "some-api-key-string"

# Redirects for role-based access control don’t use the 'to' property.
# [[redirects]]
#  from = "/gated-path"
#  status = 200
#  conditions = {Role = ["admin"]}
#  force = true

# The following redirect is intended for use with most SPAs
# that handle routing internally.
# [[redirects]]
#  from = "/*"
#  to = "/index.html"
#  status = 200

# [[headers]]
  # Define which paths this specific [[headers]] block will cover.
  # for = "/*"

  # [headers.values]
  #   X-Frame-Options = "DENY"
  #   X-XSS-Protection = "1; mode=block"
  #   Content-Security-Policy = "frame-ancestors https://www.facebook.com"

  # Multi-value headers are expressed with multi-line strings.
  # cache-control = '''
  # max-age=0,
  # no-cache,
  # no-store,
  # must-revalidate'''

    # Basic-Auth allows you to password protect your whole site.
    # This feature may not be available on all plans.
    # Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"

[functions]
  # Directory with serverless functions, including background
  # functions, to deploy. This is relative to the base directory
  # if one has been set, or the root directory if
  # a base hasn’t been set.
  directory = "functions/"

# Use [dev] to set configuration overrides for local
# development environments run using Netlify Dev - except
# for environment variables. Environment variables for Netlify
# Dev should be set under [context.dev.environment] instead.
# [dev]
#  command = "yarn start"
#  port = 8888
#  publish = "dist"

